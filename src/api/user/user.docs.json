{
  "paths": {
    "/users/{uuid}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find user by UUID.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of user that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/register-by-email": {
      "post": {
        "tags": ["users"],
        "summary": "Register user by email.",
        "requestBody": {
          "description": "Register new user in app",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password supplied"
          },
          "404": {
            "description": "Already exists (email, phone or id)"
          }
        }
      }
    },
    "/users/register-by-phone": {
      "post": {
        "tags": ["users"],
        "summary": "Register user by phone.",
        "requestBody": {
          "description": "Register new user in app",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "example": "+34672265888"
                  },
                  "password": {
                    "type": "string",
                    "example": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid phone or password supplied"
          },
          "404": {
            "description": "Already exists (email, phone or id)"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "phone": {
            "type": "string",
            "example": "+34672265888"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          }
        }
      }
    }
  }
}